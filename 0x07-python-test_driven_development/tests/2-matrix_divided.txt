    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [
    ...     [3, 6, 9],
    ...     [12, 15, 18]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

Check:

    >>> matrix = [[1, 2, 3], [4, 5, 6]]

    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

The original matrix is'nt changed.

Check:

    >>> print(matrix)
    [[1, 2, 3], [4, 5, 6]]

The function also handles floating-point numbers.

Check:

    >>> matrix = [[2.2, -4.4, 6.6], [4.4, 6.6, -8.6]]

    >>> print(matrix_divided(matrix, 2))
    [[1.1, -2.2, 3.3], [2.2, 3.3, -4.3]]

Integers and floats can be combined.

Check:

    >>> matrix = [[1, -2.2, 3, 4.4, 5], [-6.6, 7.00, 8, 9.999, 10]]

    >>> print(matrix_divided(matrix, 3))
    [[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]

Invalid Matrices
---------------
Check:

    >>> matrix = "not a list"

    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Check:

    >>> matrix = None

    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Check:

    >>> matrix = []

    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Check:

    >>> matrix = [[]]
    >>> print(matrix_divided(matrix, 3))
    [[]]

Check:

    >>> matrix = [1, 2, 3]

    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Check:

    >>> matrix = [[1, 2, 3], [4, "not a number", 6]]

    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Check:

    >>> matrix = [[1, 2, 3, 4], [5, 6, 7]]

    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Invalid Division
----------------
Check:

    >>> matrix = [[1, 2, 3], [4, 5, 6]]

    >>> print(matrix_divided(matrix, "not a number"))
    Traceback (most recent call last):
    TypeError: div must be a number

Check:

    >>> print(matrix_divided(matrix, None))
    Traceback (most recent call last):
    TypeError: div must be a number

Check:

    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero
